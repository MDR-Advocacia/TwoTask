"""create initial database schema from models

Revision ID: b3fa8d0a28ee
Revises: 
Create Date: 2025-09-22 14:46:25.419470

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b3fa8d0a28ee'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('legal_one_offices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=False, comment='ID original da entidade no Legal One'),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=True, comment="Caminho completo, ex: 'JurÃ­dico / Filial SP / Contencioso'"),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('legal_one_offices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_legal_one_offices_external_id'), ['external_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_legal_one_offices_id'), ['id'], unique=False)

    op.create_table('legal_one_task_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=False, comment='ID original da entidade no Legal One'),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['legal_one_task_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('legal_one_task_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_legal_one_task_types_external_id'), ['external_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_legal_one_task_types_id'), ['id'], unique=False)

    op.create_table('rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rules_id'), ['id'], unique=False)

    op.create_table('rule_actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('logic', sa.Enum('ASSIGN_TO_LAWSUIT_LEADER', 'ASSIGN_TO_LEADER_ASSISTANT', name='actionlogic'), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_id')
    )
    with op.batch_alter_table('rule_actions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rule_actions_id'), ['id'], unique=False)

    op.create_table('rule_conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('operator', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('rule_conditions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rule_conditions_id'), ['id'], unique=False)

    op.create_table('rule_task_type_associations',
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('task_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.ForeignKeyConstraint(['task_type_id'], ['legal_one_task_types.id'], ),
    sa.PrimaryKeyConstraint('rule_id', 'task_type_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rule_task_type_associations')
    with op.batch_alter_table('rule_conditions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rule_conditions_id'))

    op.drop_table('rule_conditions')
    with op.batch_alter_table('rule_actions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rule_actions_id'))

    op.drop_table('rule_actions')
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rules_id'))

    op.drop_table('rules')
    with op.batch_alter_table('legal_one_task_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_legal_one_task_types_id'))
        batch_op.drop_index(batch_op.f('ix_legal_one_task_types_external_id'))

    op.drop_table('legal_one_task_types')
    with op.batch_alter_table('legal_one_offices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_legal_one_offices_id'))
        batch_op.drop_index(batch_op.f('ix_legal_one_offices_external_id'))

    op.drop_table('legal_one_offices')
    # ### end Alembic commands ###
