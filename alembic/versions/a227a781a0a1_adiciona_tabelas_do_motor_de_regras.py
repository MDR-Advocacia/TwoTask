"""adiciona tabelas do motor de regras

Revision ID: a227a781a0a1
Revises: 
Create Date: 2025-09-22 10:33:49.906991

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a227a781a0a1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('legal_one_task_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('l1_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_type', sa.String(), nullable=True),
    sa.Column('subtype', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_legal_one_task_types_id'), 'legal_one_task_types', ['id'], unique=False)
    op.create_index(op.f('ix_legal_one_task_types_l1_id'), 'legal_one_task_types', ['l1_id'], unique=True)
    op.create_table('rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('action', sa.Enum('ASSIGN_TO_LEADER', 'ASSIGN_TO_ASSISTANT_ROUND_ROBIN', name='distributionactionenum'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_rules_id'), 'rules', ['id'], unique=False)
    op.create_table('rule_conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('operator', sa.String(), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rule_conditions_id'), 'rule_conditions', ['id'], unique=False)
    op.create_table('rule_task_type_association',
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('task_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], ),
    sa.ForeignKeyConstraint(['task_type_id'], ['legal_one_task_types.id'], ),
    sa.PrimaryKeyConstraint('rule_id', 'task_type_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rule_task_type_association')
    op.drop_index(op.f('ix_rule_conditions_id'), table_name='rule_conditions')
    op.drop_table('rule_conditions')
    op.drop_index(op.f('ix_rules_id'), table_name='rules')
    op.drop_table('rules')
    op.drop_index(op.f('ix_legal_one_task_types_l1_id'), table_name='legal_one_task_types')
    op.drop_index(op.f('ix_legal_one_task_types_id'), table_name='legal_one_task_types')
    op.drop_table('legal_one_task_types')
    # ### end Alembic commands ###
