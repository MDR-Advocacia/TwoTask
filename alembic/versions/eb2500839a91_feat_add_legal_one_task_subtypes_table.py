"""feat: add legal_one_task_subtypes table

Revision ID: eb2500839a91
Revises: a00000000000
Create Date: 2025-10-02 12:33:00.608836

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb2500839a91'
down_revision: Union[str, Sequence[str], None] = 'a00000000000'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('legal_one_task_subtypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('parent_type_external_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_type_external_id'], ['legal_one_task_types.external_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_legal_one_task_subtypes_external_id'), 'legal_one_task_subtypes', ['external_id'], unique=True)
    op.create_index(op.f('ix_legal_one_task_subtypes_id'), 'legal_one_task_subtypes', ['id'], unique=False)
    op.create_index(op.f('ix_legal_one_task_subtypes_parent_type_external_id'), 'legal_one_task_subtypes', ['parent_type_external_id'], unique=False)

    # --- INÍCIO DA CORREÇÃO MANUAL ---
    with op.batch_alter_table('legal_one_task_types', schema=None) as batch_op:
        # A linha abaixo foi removida ou comentada porque a constraint não tinha nome.
        # batch_op.drop_constraint(None, type_='foreignkey') <-- LINHA PROBLEMÁTICA
        
        # Como o SQLite não lida bem com a remoção de colunas com chaves estrangeiras,
        # a melhor abordagem é recriar a tabela. No entanto, para evitar perda de dados,
        # vamos apenas remover a coluna que não é mais necessária.
        # A chave estrangeira associada a 'parent_id' será implicitamente removida
        # com a coluna em muitas configurações de SQLite, mas a remoção explícita
        # da coluna é a operação principal que desejamos.
        batch_op.drop_column('parent_id')


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('legal_one_task_types', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(None, 'legal_one_task_types', ['parent_id'], ['id'])

    with op.batch_alter_table('legal_one_task_subtypes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_legal_one_task_subtypes_parent_type_external_id'))
        batch_op.drop_index(batch_op.f('ix_legal_one_task_subtypes_id'))
        batch_op.drop_index(batch_op.f('ix_legal_one_task_subtypes_external_id'))

    op.drop_table('legal_one_task_subtypes')
    # ### end Alembic commands ###
